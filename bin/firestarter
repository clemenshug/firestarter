#!/usr/bin/env python3

import argparse
import csv
import pathlib
import sys
import pandas as pd
import firestarter


def main(sys_args):
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "job_type",
        choices=list(firestarter.job_types.keys()),
        help="""Type of job. Check the documentation for available types and the
                parameters the support""",
    )
    parser.add_argument(
        "job", type=pathlib.Path, help="Job description .yaml or .csv file"
    )
    parser.add_argument(
        "--no-submit",
        action="store_true",
        help="Only create run directory structure and files, don't submit",
    )
    parser.add_argument(
        "-n",
        "--name",
        default=None,
        help="Name of job. Default: Name of job description file",
    )
    parser.add_argument(
        "-wd",
        "--working-directory",
        default=pathlib.Path.cwd(),
        help="Working directory where the run directory should be created. Default: Current directory",
    )
    parser.add_argument(
        "-rd",
        "--run-directory",
        help="""Directory where the actual run will be executed. Supercedes working directory,
                if set. Default: Automatically created as subfolder of the working directory.""",
    )
    parser.add_argument(
        "--debug",
        action="store_true",
        help="Enable debug mode. More messages. Temporary files are not deleted.",
    )
    args = parser.parse_args(sys_args)
    job_class = firestarter.job_types[args.job_type]
    job_dict = {
        "working_directory": args.working_directory,
        "run_directory": args.run_directory,
        "name": args.name if args.name is not None else args.job.stem,
        "debug": args.debug,
    }
    if args.job.suffix == ".yaml":
        raise NotImplementedError("Yaml job descrioption not implemented yet...")
    elif args.job.suffix == ".csv":
        csv_contents = pd.read_csv(args.job)
        job_dict["data"] = csv_contents
        j = job_class.from_dict(job_dict)
    else:
        raise ValueError(
            "Job description file type not supported: ", str(args.job.suffix)
        )
    j.prepare_run()
    if not args.no_submit:
        j.submit_run()


if __name__ == "__main__":
    main(sys.argv[1:])
